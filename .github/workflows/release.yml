name: Glox Release
on:
  push:
    branches:
      - releases
  workflow_dispatch:

defaults:
  run:
    working-directory: ./glox

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        arch:
          - amd64
          - arm64 (macos only)
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.20.0'
          check-latest: true
      - run: go version

      - name: Build Binary for ${{ matrix.os }} / ${{ matrix.arch }}
        run: |
          case ${{ matrix.os }} in
              ubuntu)   GOOS=linux   GOARCH=${{ matrix.arch }} ;;
              macos)    GOOS=darwin  GOARCH=${{ matrix.arch }} ;;
              windows)  GOOS=windows GOARCH=${{ matrix.arch }} ;;
          esac
          go build -v -o glox-${{ matrix.os }}-${{ matrix.arch }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}-${{ matrix.os }}-${{ matrix.arch }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./glox/glox
          asset_name: glox-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
